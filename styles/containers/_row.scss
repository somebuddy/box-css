/*
** Styles for one row container
*/

$line-height: 1.5rem !default;
$column-width: 1rem !default;

$row-border-width: 2px !default;
$row-padding: $column-width !default;
$row-child-margin: $column-width !default;

$row-marker-size: $line-height !default;
$secondary-opacity: .6 !default;

@mixin row-layout {
  @include flex-row;
  padding: 0 0 0 $row-padding;
  margin: 0;
  line-height: $line-height;

  /* Default child styles */
  > * {
    @include flex-middle-left;
    @include flex-child-fixed(auto);
    margin-right: $row-child-margin;

    &:last-child { margin-right: $row-padding; }
  }

  > .fluid { @include flex-child-fluid($basis: auto); }

  > .pull-right {
    order: 99;
    margin-left: auto !important;

    & ~ .pull-right {
      margin-left: 0 !important;
    }
  }

  > .pull-left {
    order: -99;
    margin-right: auto;
  }
}

// components

@mixin row-marker {
  /* Rules for first row element (icon, avatar, checkbox etc.) */
  flex-basis: $row-marker-size;
  order: -99;
}

@mixin row-filler {
  /* Element that fill free space in row */
  @include flex-child-fluid($basis: 0);
  min-width: 0;
}

@mixin row-text-line {
  /* One line text in row */
  @include text-ellipsis(nowrap);
}

@mixin row-column {
  /* Fixed minimum size without padding */
  @include flex-child-fixed($column-width);
  justify-content: center;
}

@mixin row-cell {
  /* element that has own padding and zero margin */
  padding: 0 $column-width;
  &:first-child { margin-left: -$row-child-margin; }
  &:last-child { margin-right: 0; }
  & + .cell { margin-left: -$row-child-margin; }
  & + .spacer { margin-left: -$row-child-margin; }
}

@mixin row-spacer {
  /* Add additional 1 column-width space between elements */
  @include row-column;
  &:last-child { margin-right: 0; }
  & + * { margin-left: -$row-child-margin; }
}

@mixin row-splitter {
  @include flex-child-fixed($basis: 1px);
  margin: 0 calc(#{$row-child-margin/2} - 1px) 0 0;
  margin-left: -$row-child-margin/2;
  align-self: center;
  height: $line-height;
  background: rgba(0,0,0,$secondary-opacity/2);

  &.wide {
    margin: 0 calc(#{$row-child-margin} - 1px) 0 0;
    margin-left: 0;
    &:first-child { margin-left: 0; }
  }

  &:first-child { margin-left: -$row-child-margin/2; }
  & + .splitter { margin-left: 0; }
  &.dark  { background-color: rgba(0,0,0,$secondary-opacity/2); }
  &.light { background-color: rgba(255,255,255,$secondary-opacity/2); }
}

@mixin row-block {
  /* element with own height */
  align-self: center;
  margin-top: 0;
  margin-bottom: 0;
  & + .cell { margin-left: 0; }
  &:first-child { margin-left: 0; }
  &:last-child { margin-right: 0; }
}

@mixin row-components {
  /* Row with set of predefined child elements */
  > .row-icon { @include row-marker; }
  > .title, > .label { @include row-text-line; }
  > .title, > .filler { @include row-filler; }
  > .icon { @include row-column; }
  > .spacer { @include row-spacer; }
  > .cell, > .toolbar, > nav { @include row-cell; }
  > .row-button {
    @include row-cell;
    @include button-hover;
  }
  > .block, > .button { @include row-block; }
  > .splitter { @include row-splitter; }

  &.right > .row-icon { order: 999; }
  > .static { opacity: $secondary-opacity; }
}

@mixin row-container {
  @include row-layout;
  @include row-components;
  min-height: $line-height*2;
}

@mixin row-element {
  @include row-container;
  width: 100%;
  border-top: $row-border-width solid transparent;
  border-bottom: $row-border-width solid transparent;
}

.row {
  @include row-layout;
  @include row-components;
  min-height: $line-height*2;
  width: 100%;
  border-top: $row-border-width solid transparent;
  border-bottom: $row-border-width solid transparent;
}
